Prophiler_NNP :_: a_DT fast_JJ filter_NN for_IN the_DT large-scale_JJ detection_NN of_IN malicious_JJ web_NN pages_NNS
Malicious_JJ web_NN pages_NNS that_WDT host_VBP drive-by-download_JJ exploits_NNS have_VBP become_VBN a_DT popular_JJ means_NN for_IN compromising_VBG hosts_NNS on_IN the_DT Internet_NN and_CC ,_, subsequently_RB ,_, for_IN creating_VBG large-scale_JJ botnets_NNS ._.
In_IN a_DT drive-by-download_NN exploit_VB ,_, an_DT attacker_NN embeds_VBZ a_DT malicious_JJ script_NN -LRB-_-LRB- typically_RB written_VBN in_IN JavaScript_NNP -RRB-_-RRB- into_IN a_DT web_NN page_NN ._.
When_WRB a_DT victim_NN visits_VBZ this_DT page_NN ,_, the_DT script_NN is_VBZ executed_VBN and_CC attempts_VBZ to_TO compromise_VB the_DT browser_NN or_CC one_CD of_IN its_PRP$ plugins_NNS ._.
To_TO detect_VB drive-by-download_JJ exploits_NNS ,_, researchers_NNS have_VBP developed_VBN a_DT number_NN of_IN systems_NNS that_WDT analyze_VBP web_NN pages_NNS for_IN the_DT presence_NN of_IN malicious_JJ code_NN ._.
Most_JJS of_IN these_DT systems_NNS use_VBP dynamic_JJ analysis_NN ._.
That_DT is_VBZ ,_, they_PRP run_VBP the_DT scripts_NNS associated_VBN with_IN a_DT web_NN page_NN either_CC directly_RB in_IN a_DT real_JJ browser_NN -LRB-_-LRB- running_VBG in_IN a_DT virtualized_JJ environment_NN -RRB-_-RRB- or_CC in_IN an_DT emulated_VBN browser_NN ,_, and_CC they_PRP monitor_VBP the_DT scripts_NNS '_POS executions_NNS for_IN malicious_JJ activity_NN ._.
While_IN the_DT tools_NNS are_VBP quite_RB precise_JJ ,_, the_DT analysis_NN process_NN is_VBZ costly_JJ ,_, often_RB requiring_VBG in_IN the_DT order_NN of_IN tens_NNS of_IN seconds_NNS for_IN a_DT single_JJ page_NN ._.
Therefore_RB ,_, performing_VBG this_DT analysis_NN on_IN a_DT large_JJ set_NN of_IN web_NN pages_NNS containing_VBG hundreds_NNS of_IN millions_NNS of_IN samples_NNS can_MD be_VB prohibitive_JJ ._.
One_CD approach_NN to_TO reduce_VB the_DT resources_NNS required_VBN for_IN performing_VBG large-scale_JJ analysis_NN of_IN malicious_JJ web_NN pages_NNS is_VBZ to_TO develop_VB a_DT fast_JJ and_CC reliable_JJ filter_NN that_WDT can_MD quickly_RB discard_VB pages_NNS that_WDT are_VBP benign_JJ ,_, forwarding_NN to_TO the_DT costly_JJ analysis_NN tools_NNS only_RB the_DT pages_NNS that_WDT are_VBP likely_JJ to_TO contain_VB malicious_JJ code_NN ._.
In_IN this_DT paper_NN ,_, we_PRP describe_VBP the_DT design_NN and_CC implementation_NN of_IN such_PDT a_DT filter_NN ._.
Our_PRP$ filter_NN ,_, called_VBN Prophiler_NNP ,_, uses_VBZ static_JJ analysis_NN techniques_NNS to_TO quickly_RB examine_VB a_DT web_NN page_NN for_IN malicious_JJ content_NN ._.
This_DT analysis_NN takes_VBZ into_IN account_NN features_NNS derived_VBN from_IN the_DT HTML_NNP contents_NNS of_IN a_DT page_NN ,_, from_IN the_DT associated_VBN JavaScript_NNP code_NN ,_, and_CC from_IN the_DT corresponding_JJ URL_NN ._.
We_PRP automatically_RB derive_VBP detection_NN models_NNS that_WDT use_VBP these_DT features_NNS using_VBG machine-learning_JJ techniques_NNS applied_VBN to_TO labeled_JJ datasets_NNS ._.
To_TO demonstrate_VB the_DT effectiveness_NN and_CC efficiency_NN of_IN Prophiler_NNP ,_, we_PRP crawled_VBD and_CC collected_VBD millions_NNS of_IN pages_NNS ,_, which_WDT we_PRP analyzed_VBD for_IN malicious_JJ behavior_NN ._.
Our_PRP$ results_NNS show_VBP that_IN our_PRP$ filter_NN is_VBZ able_JJ to_TO reduce_VB the_DT load_NN on_IN a_DT more_RBR costly_JJ dynamic_JJ analysis_NN tools_NNS by_IN more_JJR than_IN 85_CD %_NN ,_, with_IN a_DT negligible_JJ amount_NN of_IN missed_VBN malicious_JJ pages_NNS ._.
