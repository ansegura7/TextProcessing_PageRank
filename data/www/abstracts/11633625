Automated_NNP object_NN persistence_NN for_IN JavaScript_NNP
Traditionally_RB web_NN applications_NNS have_VBP required_VBN an_DT internet_NN connection_NN in_IN order_NN to_TO work_VB with_IN data_NNS ._.
Browsers_NNS have_VBP lacked_VBN any_DT mechanisms_NNS to_TO allow_VB web_NN applications_NNS to_TO operate_VB offline_JJ with_IN a_DT set_NN of_IN data_NNS to_TO provide_VB constant_JJ access_NN to_TO applications_NNS ._.
Recently_RB ,_, through_IN browser_NN plug-ins_NNS such_JJ as_IN Google_NNP Gears_NNP ,_, browsers_NNS have_VBP gained_VBN the_DT ability_NN to_TO persist_VB data_NNS for_IN offline_JJ use_NN ._.
However_RB ,_, until_IN now_RB it_PRP 's_VBZ been_VBN difficult_JJ for_IN a_DT web_NN developer_NN using_VBG these_DT plug-ins_NNS to_TO manage_VB persisting_VBG data_NNS both_CC locally_RB for_IN offline_JJ use_NN and_CC in_IN the_DT internet_NN cloud_NN due_JJ to_TO :_: synchronization_NN requirements_NNS ,_, managing_VBG throughput_NN and_CC latency_NN to_TO the_DT cloud_NN ,_, and_CC making_VBG it_PRP work_VB within_IN the_DT confines_NNS of_IN a_DT standards-compliant_JJ web_NN browser_NN ._.
Historically_NNP in_IN non-browser_JJ environments_NNS ,_, programming_NN language_NN environments_NNS have_VBP offered_VBN automated_JJ object_NN persistence_NN to_TO shield_VB the_DT developer_NN from_IN these_DT complexities_NNS ._.
In_IN our_PRP$ research_NN we_PRP have_VBP created_VBN a_DT framework_NN which_WDT introduces_VBZ automated_JJ persistence_NN of_IN data_NNS objects_NNS for_IN JavaScript_NNP utilizing_VBG the_DT internet_NN ._.
Unlike_IN traditional_JJ object_NN persistence_NN solutions_NNS ,_, ours_PRP relies_VBZ only_RB on_IN existing_JJ or_CC forthcoming_JJ internet_NN standards_NNS and_CC does_VBZ not_RB rely_VB upon_IN specific_JJ runtime_NN mechanisms_NNS such_JJ as_IN OS_NN or_CC interpreter\/compiler_NN support_NN ._.
A_DT new_JJ design_NN was_VBD required_VBN in_IN order_NN to_TO be_VB suitable_JJ to_TO the_DT internet_NN 's_POS unique_JJ characteristics_NNS of_IN varying_VBG connection_NN quality_NN and_CC a_DT browser_NN 's_POS specific_JJ restrictions_NNS ._.
We_PRP validate_VBP our_PRP$ approach_NN using_VBG benchmarks_NNS which_WDT show_VBP that_IN our_PRP$ framework_NN can_MD handle_VB thousands_NNS of_IN data_NNS objects_NNS automatically_RB ,_, reducing_VBG the_DT amount_NN of_IN work_NN needed_VBN by_IN developers_NNS to_TO support_VB offline_JJ Web_NN applications_NNS ._.
