Huskysim_NNP :_: a_DT simulation_NN toolkit_NN for_IN application_NN scheduling_NN in_IN computational_JJ grids_NNS
Grid_NNP computing_NN --_: the_DT assemblage_NN of_IN heterogeneous_JJ distributed_VBN clusters_NNS of_IN computers_NNS viewed_VBN as_IN a_DT single_JJ virtual_JJ machine_NN --_: promises_VBZ to_TO serve_VB as_IN the_DT next_JJ major_JJ paradigm_NN in_IN distributed_VBN computing_NN ._.
Since_IN Grids_NNS are_VBP assemblages_NNS of_IN -LRB-_-LRB- usually_RB -RRB-_-RRB- autonomous_JJ systems_NNS -LRB-_-LRB- autonomous_JJ clusters_NNS ,_, supercomputers_NNS ,_, or_CC even_RB single_JJ workstations_NNS -RRB-_-RRB- scheduling_NN can_MD become_VB a_DT complex_JJ affair_NN which_WDT must_MD take_VB into_IN consideration_NN not_RB just_RB the_DT requirements_NNS -LRB-_-LRB- and_CC scheduling_NN decisions_NNS -RRB-_-RRB- made_VBN at_IN the_DT point_NN of_IN the_DT job_NN 's_POS origin_NN ,_, but_CC also_RB the_DT scheduling_NN requirements_NNS -LRB-_-LRB- and_CC decisions_NNS -RRB-_-RRB- made_VBN at_IN remote_JJ points_NNS on_IN the_DT fabric_NN ,_, and_CC in_IN particular_JJ scheduling_NN decisions_NNS made_VBN by_IN a_DT remote_JJ autonomous_JJ system_NN onto_IN which_WDT the_DT local_JJ job_NN has_VBZ been_VBN scheduled_VBN ._.
The_DT current_JJ existing_VBG scheduling_NN models_NNS range_VBP from_IN static_JJ ,_, where_WRB each_DT of_IN the_DT programs_NNS is_VBZ assigned_VBN once_RB to_TO a_DT processor_NN before_IN execution_NN of_IN the_DT program_NN commences_VBZ ,_, to_TO dynamic_NN ,_, where_WRB a_DT program_NN may_MD be_VB reassigned_VBN to_TO different_JJ processors_NNS ,_, or_CC a_DT hybrid_NN approach_NN ,_, which_WDT combines_VBZ characteristics_NNS of_IN both_DT techniques_NNS -LRB-_-LRB- 1,4,5_CD -RRB-_-RRB- ._.
To_TO address_VB this_DT issue_NN ,_, we_PRP have_VBP developed_VBN a_DT JAVA_NNP based_VBN discrete_JJ event_NN Grid_NNP simulator_NN toolkit_NN called_VBN HuskySim_NNP ._.
The_DT HuskySim_NNP toolkit_NN provides_VBZ core_NN functionalities_NNS -LRB-_-LRB- e.g._FW ,_, compute_VB objects_NNS ,_, network_NN objects_NNS ,_, and_CC scheduling_NN objects_NNS -RRB-_-RRB- that_WDT can_MD be_VB used_VBN to_TO simulate_VB a_DT distributed_VBN computing_NN environment_NN ._.
Furthermore_RB ,_, it_PRP can_MD be_VB used_VBN to_TO predict_VB the_DT performance_NN of_IN various_JJ classes_NNS of_IN Grid_NNP scheduling_NN algorithms_NNS including_VBG :_: Static_JJ scheduling_NN algorithms_NNS ,_, Dynamic_NNP scheduling_NN ,_, Adaptive_JJ Scheduling_NN ._.
In_IN our_PRP$ design_NN ,_, we_PRP adopted_VBD an_DT object-oriented_JJ design_NN ,_, which_WDT allows_VBZ an_DT easy_JJ mapping_NN and_CC integration_NN of_IN simulation_NN objects_NNS into_IN the_DT simulation_NN program_NN ._.
This_DT approach_NN simplifies_VBZ the_DT simulation_NN of_IN multitasking_NN ,_, and_CC distributed_VBN data_NNS processing_NN model_NN ._.
Our_PRP$ model_NN of_IN multitasking_JJ processing_NN is_VBZ based_VBN on_IN an_DT interrupt_JJ driven_JJ mechanism_NN ._.
As_IN shown_VBN in_IN Figure_NNP 1_CD ,_, the_DT simulator_NN works_VBZ by_IN relaying_VBG messages_NNS between_IN the_DT core_NN engine_NN and_CC the_DT simulation_NN modules_NNS through_IN the_DT message_NN handling_NN sub-system_NN ._.
Once_RB the_DT architecture_NN ,_, the_DT load_NN distribution_NN ,_, and_CC the_DT scheduling_NN algorithms_NNS are_VBP defined_VBN ,_, the_DT object_NN registration_NN subsystem_NN sends_VBZ a_DT NEW_NN OBJECT_FW REQUEST_FW MESSAGE_NN to_TO the_DT object_NN class_NN libraries_NNS and_CC builds_VBZ a_DT skeleton_NN for_IN the_DT requested_VBN simulation_NN experiment_NN ._.
Workloads_NNS traces_NNS can_MD be_VB generated_VBN using_VBG probabilistic_JJ models_NNS ._.
The_DT currently_RB supported_VBN distributions_NNS are_VBP :_: Uniform_NNP ,_, Poisson_NNP ,_, Exponential_NNP ,_, Normal_JJ ,_, Erlang_NNP ,_, and_CC Power_NNP Tailed_NNP ._.
It_PRP is_VBZ also_RB possible_JJ to_TO use_VB real_JJ world_NN load_NN traces_NNS ._.
Moreover_RB ,_, we_PRP augmented_VBD the_DT Simulator_NNP with_IN a_DT statistical_JJ module_NN ._.
Using_VBG the_DT statistical_JJ module_NN provided_VBN with_IN the_DT HuskySim_NNP ,_, the_DT core_NN simulation_NN engine_NN can_MD send_VB messages_NNS to_TO perform_VB various_JJ type_NN of_IN analysis_NN on_IN the_DT performance_NN data_NNS including_VBG :_: variance_NN reduction_NN ,_, regression_NN ,_, time_NN series_NN analysis_NN ,_, clustering_NN ,_, and_CC data_NNS mining_NN ._.
In_IN order_NN to_TO quantify_VB the_DT system_NN performance_NN ,_, the_DT simulator_NN provides_VBZ various_JJ performance_NN metrics_NNS including_VBG :_: CPU_NN utilization_NN ,_, disk_NN utilization_NN ,_, application_NN turnaround_NN time_NN ,_, latency_NN ,_, make_VB span_NN ,_, host_NN to_TO host_NN bandwidth_NN ,_, jammed_VBN bandwidth_NN ,_, and_CC TCP\/IP_NN traffic_NN data_NNS ._.
These_DT measurements_NNS are_VBP handled_VBN through_IN the_DT measurement_NN sub-system_NN ._.
Furthermore_RB ,_, the_DT HuskySim_NNP can_MD be_VB used_VBN to_TO simulate_VB the_DT classes_NNS of_IN algorithmic_JJ and_CC parametric_JJ adaptive_JJ Grid_NNP schedulers_NNS ._.
In_IN which_WDT ,_, the_DT scheduling_NN algorithm_NN may_MD not_RB be_VB fixed_VBN in_IN advance_NN ._.
Simply_RB ,_, the_DT scheduling_NN algorithm_NN is_VBZ selected_VBN at_IN run_NN time_NN based_VBN on_IN the_DT current_JJ workload_NN on_IN the_DT Grid_NNP fabric_NN in_IN order_NN to_TO operate_VB at_IN near_JJ optimal_JJ level_NN ._.
